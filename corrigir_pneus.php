<?php require_once "includes/config.php"; require_once "includes/functions.php"; echo "<h2>Corrigindo problemas da gestão de pneus...</h2>"; try { $pdo = new PDO("mysql:host=localhost;port=3307;dbname=sistema_frotas", "root", ""); $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); echo "<h3>1. Criando tabela status_pneus...</h3>"; $sql = "CREATE TABLE IF NOT EXISTS status_pneus (id INT(11) NOT NULL AUTO_INCREMENT, nome VARCHAR(50) NOT NULL, descricao TEXT NULL, cor VARCHAR(20) DEFAULT \"#666666\", created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (id)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4"; $pdo->exec($sql); echo " Tabela status_pneus criada/verificada<br>"; $statuses = [[1, "furado", "Pneu furado ou com danos graves", "#dc3545"], [2, "disponivel", "Pneu disponível para uso", "#28a745"], [3, "descartado", "Pneu descartado/irrecuperável", "#6c757d"], [4, "gasto", "Pneu gasto mas ainda utilizável", "#ffc107"], [5, "novo", "Pneu novo ou em excelente estado", "#17a2b8"]]; foreach ($statuses as $status) { $stmt = $pdo->prepare("INSERT IGNORE INTO status_pneus (id, nome, descricao, cor) VALUES (?, ?, ?, ?)"); $stmt->execute($status); } echo " Status padrão inseridos<br>"; echo "<h3>2. Verificando tabela estoque_pneus...</h3>"; $sql = "CREATE TABLE IF NOT EXISTS estoque_pneus (id INT(11) NOT NULL AUTO_INCREMENT, pneu_id INT(11) NOT NULL, status_id INT(11) NULL, disponivel TINYINT(1) DEFAULT 1, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (id), UNIQUE KEY unique_pneu (pneu_id)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4"; $pdo->exec($sql); echo " Tabela estoque_pneus criada/verificada<br>"; echo "<h3>3. Inserindo pneus no estoque...</h3>"; $sql = "INSERT IGNORE INTO estoque_pneus (pneu_id, status_id, disponivel, created_at, updated_at) SELECT p.id as pneu_id, p.status_id, CASE WHEN EXISTS (SELECT 1 FROM instalacoes_pneus ip WHERE ip.pneu_id = p.id AND ip.data_remocao IS NULL) THEN 0 ELSE 1 END as disponivel, p.created_at, p.updated_at FROM pneus p LEFT JOIN estoque_pneus ep ON p.id = ep.pneu_id WHERE ep.pneu_id IS NULL"; $pdo->exec($sql); echo " Pneus inseridos no estoque<br>"; echo "<h3>4. Atualizando status dos pneus...</h3>"; $sql = "UPDATE pneus p SET status_id = 5 WHERE p.id IN (SELECT pneu_id FROM instalacoes_pneus WHERE data_remocao IS NULL)"; $pdo->exec($sql); echo " Status dos pneus instalados atualizados<br>"; echo "<h3>5. Atualizando disponibilidade no estoque...</h3>"; $sql = "UPDATE estoque_pneus ep SET disponivel = 0 WHERE ep.pneu_id IN (SELECT pneu_id FROM instalacoes_pneus WHERE data_remocao IS NULL)"; $pdo->exec($sql); echo " Disponibilidade atualizada<br>"; echo "<h3>6. Estatísticas finais:</h3>"; $stats = ["Total de pneus" => "SELECT COUNT(*) FROM pneus", "Pneus disponíveis" => "SELECT COUNT(*) FROM pneus p WHERE p.id NOT IN (SELECT pneu_id FROM instalacoes_pneus WHERE data_remocao IS NULL) AND p.status_id IN (2, 5)", "Pneus em uso" => "SELECT COUNT(*) FROM pneus p WHERE p.id IN (SELECT pneu_id FROM instalacoes_pneus WHERE data_remocao IS NULL)", "Pneus em manutenção" => "SELECT COUNT(*) FROM pneus WHERE status_id = 1"]; foreach ($stats as $label => $query) { $stmt = $pdo->query($query); $count = $stmt->fetchColumn(); echo " $label: $count<br>"; } echo "<h3> Correções concluídas com sucesso!</h3>"; echo "<p>Agora você pode acessar a página de gestão interativa e os pneus devem aparecer corretamente.</p>"; } catch (Exception $e) { echo "<h3> Erro durante as correções:</h3>"; echo "<p>" . $e->getMessage() . "</p>"; } ?>
